security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:     [ROLE_USER, ROLE_CLINIC_SETUP, ROLE_ACCOUNT_SETUP, ROLE_ENTITY_ADD]
        ROLE_DOCTOR:    [ROLE_USER, ROLE_RECORD_CREATE]
        ROLE_PATIENT:   [ROLE_USER, ROLE_RECORD_VIEW, ROLE_HISTORY_VIEW]
    
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # pattern:    ^/
            # http_basic: ~
            provider: our_db_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
            logout:
                path:   logout
                target: login
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/clinic, roles: ROLE_ADMIN }
        # - { path: ^/user_info, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_ADMIN }
        # - { path: ^/doctor, roles: ROLE_DOCTOR }
        # - { path: ^/patient, roles: ROLE_PATIENT }